# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Pipeline

on:
    release:
        types: [published]
    push:
        tags: ["v*"]
    pull_request:
        branches: ["main"]

env:
    REGISTRY: docker.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build:
        name: Test and Lint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Setup FFmpeg
              uses: AnimMouse/setup-ffmpeg@v1
              with:
                  version: master
            - name: Install uv
              uses: astral-sh/setup-uv@v5
              with:
                  # Install a specific version of uv.
                  version: "0.5.29"
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version-file: ".python-version"

            - name: Install the project
              run: uv sync --all-extras --dev

            - name: Run tests
              run: uv run pytest

            - name: Lint and format
              run: uv run ruff check --fix-only && uv run ruff format && uv run isort .

    cpu_push_to_registry:
        name: CPU Docker Image Build and Push
        runs-on: ubuntu-latest
        needs: build
        permissions:
            packages: write
            contents: read
            attestations: write
            id-token: write

        steps:
            - name: Check out the repo
              uses: actions/checkout@v4

            - name: Log in to Docker Hub
              uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: lowercase github.repository
              run: |
                  echo "IMAGE_NAME=$(echo ${GITHUB_REPOSITORY} | tr '[:upper:]' '[:lower:]')" >> ${GITHUB_ENV}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
              with:
                  images: ${{ env.REGISTRY}}/${{ env.IMAGE_NAME}}
                  flavor: |
                      latest=false
                      prefix=cpu
                      suffix=
                  tags: |
                      type=ref,event=pr,prefix=cpu_pr-
                      type=semver,pattern={{version}},prefix=cpu_
            - name: Build and Push Docker Image
              id: push
              uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
              with:
                  context: .
                  file: ./Dockerfile.cpu
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v2
              with:
                  subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
                  subject-digest: ${{ steps.push.outputs.digest }}
                  push-to-registry: false

    gpu_build_push_to_registry:
        name: GPU Docker Image Build and Push
        runs-on: ubuntu-latest
        needs: build
        permissions:
            packages: write
            contents: read
            attestations: write
            id-token: write

        steps:
            - name: Check out the repo
              uses: actions/checkout@v4

            - name: Log in to Docker Hub
              uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: lowercase github.repository
              run: |
                  echo "IMAGE_NAME=$(echo ${GITHUB_REPOSITORY} | tr '[:upper:]' '[:lower:]')" >> ${GITHUB_ENV}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
              with:
                  images: ${{ env.REGISTRY}}/${{ env.IMAGE_NAME}}
                  flavor: |
                      latest=auto
                      prefix=gpu
                      suffix=
                  tags: |
                      type=ref,event=pr,prefix=gpu_pr-
                      type=semver,pattern={{version}},prefix=gpu_
            - name: Build and Push Docker Image
              id: push
              uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
              with:
                  context: .
                  file: ./Dockerfile.gpu
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v2
              with:
                  subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
                  subject-digest: ${{ steps.push.outputs.digest }}
                  push-to-registry: false
